{"ast":null,"code":"var _jsxFileName = \"/home/vornxy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Programming/n/todo/todo/src/components/FolderScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderScreen = props => {\n  _s();\n  const [value, setValue] = useState('');\n  const n = props.notesInFolders.filter(el => el.id == props.sd);\n  const new_n = n.map(n => n.notes.map(e => /*#__PURE__*/_jsxDEV(\"input\", {\n    value: e,\n    className: \"QNInput\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 43\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.setIsInFolder(false),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setValue(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.setNotesInFolders(draft => {\n              draft[props.sd].notes = [...draft[props.sd].notes, value];\n            }),\n            children: \"Add new note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: new_n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n_s(FolderScreen, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = FolderScreen;\nexport default FolderScreen;\nvar _c;\n$RefreshReg$(_c, \"FolderScreen\");","map":{"version":3,"names":["useState","useImmer","jsxDEV","_jsxDEV","FolderScreen","props","_s","value","setValue","n","notesInFolders","filter","el","id","sd","new_n","map","notes","e","className","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","setIsInFolder","onChange","target","setNotesInFolders","draft","_c","$RefreshReg$"],"sources":["/home/vornxy/Рабочий стол/Programming/n/todo/todo/src/components/FolderScreen.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport { useImmer } from \"use-immer\"\n\nconst FolderScreen = (props) =>{\n  const [value, setValue] = useState('')\n    const n = props.notesInFolders.filter((el) => el.id == props.sd)\n    const new_n = n.map(n=>n.notes.map(e=><input value={e} className='QNInput'></input>))\n    \n    return(<div>\n    <button onClick={()=>props.setIsInFolder(false)}>Back</button>\n    <div >\n        <div >\n          <input onChange={e=>{setValue(e.target.value)}}></input>\n          <div >\n            <button  onClick={()=>props.setNotesInFolders(draft=>{draft[props.sd].notes = [...draft[props.sd].notes, value]})}>Add new note</button>   \n          </div>\n          <div >{new_n}</div>\n        </div>\n    </div>\n    </div>)\n}\n\nexport default FolderScreen"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAIC,KAAK,IAAI;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,CAAC,GAAGJ,KAAK,CAACK,cAAc,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAE,IAAIR,KAAK,CAACS,EAAE,CAAC;EAChE,MAAMC,KAAK,GAAGN,CAAC,CAACO,GAAG,CAACP,CAAC,IAAEA,CAAC,CAACQ,KAAK,CAACD,GAAG,CAACE,CAAC,iBAAEf,OAAA;IAAOI,KAAK,EAAEW,CAAE;IAACC,SAAS,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,CAAC,CAAC;EAErF,oBAAOpB,OAAA;IAAAqB,QAAA,gBACPrB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAIpB,KAAK,CAACqB,aAAa,CAAC,KAAK,CAAE;MAAAF,QAAA,EAAC;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9DpB,OAAA;MAAAqB,QAAA,eACIrB,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAOwB,QAAQ,EAAET,CAAC,IAAE;YAACV,QAAQ,CAACU,CAAC,CAACU,MAAM,CAACrB,KAAK,CAAC;UAAA;QAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxDpB,OAAA;UAAAqB,QAAA,eACErB,OAAA;YAASsB,OAAO,EAAEA,CAAA,KAAIpB,KAAK,CAACwB,iBAAiB,CAACC,KAAK,IAAE;cAACA,KAAK,CAACzB,KAAK,CAACS,EAAE,CAAC,CAACG,KAAK,GAAG,CAAC,GAAGa,KAAK,CAACzB,KAAK,CAACS,EAAE,CAAC,CAACG,KAAK,EAAEV,KAAK,CAAC;YAAA,CAAC,CAAE;YAAAiB,QAAA,EAAC;UAAY;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrI,CAAC,eACNpB,OAAA;UAAAqB,QAAA,EAAOT;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACV,CAAC;AAAAjB,EAAA,CAjBKF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAmBlB,eAAeA,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
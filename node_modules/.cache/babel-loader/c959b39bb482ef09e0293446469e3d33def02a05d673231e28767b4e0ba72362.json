{"ast":null,"code":"var _jsxFileName = \"/home/vornxy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Programming/n/todo/todo/src/components/FolderScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport cl from '../styles/FolderScreen.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderScreen = props => {\n  _s();\n  const [value, setValue] = useState('');\n  const n = props.notesInFolders.filter(el => el.id == props.sd);\n  function findElement(list) {\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].id == props.sd) {\n        return list[i];\n        break;\n      }\n    }\n  }\n  let co = findElement(props.notesInFolders);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: cl.Back,\n      onClick: () => props.setIsInFolder(false),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.FolderScreen,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: cl.FolderScreenInput,\n          onChange: e => {\n            setValue(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cl.FSButBlock,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cl.FolderScreenButton,\n            onClick: () => props.setNotesInFolders(draft => {\n              draft[props.sd].notes = [...draft[props.sd].notes, value];\n            }),\n            children: \"Add new note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NotesList\",\n          children: n.map(note => note.notes.map(e => /*#__PURE__*/_jsxDEV(\"input\", {\n            value: e,\n            readOnly: true,\n            className: cl.QNInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 69\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n_s(FolderScreen, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = FolderScreen;\nexport default FolderScreen;\nvar _c;\n$RefreshReg$(_c, \"FolderScreen\");","map":{"version":3,"names":["useState","useImmer","cl","jsxDEV","_jsxDEV","FolderScreen","props","_s","value","setValue","n","notesInFolders","filter","el","id","sd","findElement","list","i","length","co","children","className","Back","onClick","setIsInFolder","fileName","_jsxFileName","lineNumber","columnNumber","FolderScreenInput","onChange","e","target","FSButBlock","FolderScreenButton","setNotesInFolders","draft","notes","map","note","readOnly","QNInput","_c","$RefreshReg$"],"sources":["/home/vornxy/Рабочий стол/Programming/n/todo/todo/src/components/FolderScreen.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport { useImmer } from \"use-immer\"\nimport cl from '../styles/FolderScreen.module.css'\n\nconst FolderScreen = (props) =>{\n  const [value, setValue] = useState('')\n  const n = props.notesInFolders.filter((el) => el.id == props.sd)\n\n\n  function findElement(list){\n    for(let i = 0; i < list.length; i++){\n      if(list[i].id == props.sd) {\n        return list[i];\n        break\n      }\n    }\n  }\n  let co = findElement(props.notesInFolders)\n    \n    return(<div>\n    <button className={cl.Back} onClick={()=>props.setIsInFolder(false)}>Back</button>\n    <div className={cl.FolderScreen}>\n        <div /*className=\"FSBlock\"*/>\n          <input className={cl.FolderScreenInput} onChange={e=>{setValue(e.target.value)}}></input>\n          <div className={cl.FSButBlock}>\n            <button className={cl.FolderScreenButton} onClick={()=>props.setNotesInFolders(draft=>{draft[props.sd].notes = [...draft[props.sd].notes, value]})}>Add new note</button>   \n          </div>\n          <div className='NotesList'>{n.map(note=>note.notes.map(e=><input value={e} readOnly={true} className={cl.QNInput}></input>))}</div>\n        </div>\n    </div>\n    </div>)\n}\n\nexport default FolderScreen\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,EAAE,MAAM,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAIC,KAAK,IAAI;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,CAAC,GAAGJ,KAAK,CAACK,cAAc,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAE,IAAIR,KAAK,CAACS,EAAE,CAAC;EAGhE,SAASC,WAAWA,CAACC,IAAI,EAAC;IACxB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,EAAE,EAAC;MAClC,IAAGD,IAAI,CAACC,CAAC,CAAC,CAACJ,EAAE,IAAIR,KAAK,CAACS,EAAE,EAAE;QACzB,OAAOE,IAAI,CAACC,CAAC,CAAC;QACd;MACF;IACF;EACF;EACA,IAAIE,EAAE,GAAGJ,WAAW,CAACV,KAAK,CAACK,cAAc,CAAC;EAExC,oBAAOP,OAAA;IAAAiB,QAAA,gBACPjB,OAAA;MAAQkB,SAAS,EAAEpB,EAAE,CAACqB,IAAK;MAACC,OAAO,EAAEA,CAAA,KAAIlB,KAAK,CAACmB,aAAa,CAAC,KAAK,CAAE;MAAAJ,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClFzB,OAAA;MAAKkB,SAAS,EAAEpB,EAAE,CAACG,YAAa;MAAAgB,QAAA,eAC5BjB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAOkB,SAAS,EAAEpB,EAAE,CAAC4B,iBAAkB;UAACC,QAAQ,EAAEC,CAAC,IAAE;YAACvB,QAAQ,CAACuB,CAAC,CAACC,MAAM,CAACzB,KAAK,CAAC;UAAA;QAAE;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzFzB,OAAA;UAAKkB,SAAS,EAAEpB,EAAE,CAACgC,UAAW;UAAAb,QAAA,eAC5BjB,OAAA;YAAQkB,SAAS,EAAEpB,EAAE,CAACiC,kBAAmB;YAACX,OAAO,EAAEA,CAAA,KAAIlB,KAAK,CAAC8B,iBAAiB,CAACC,KAAK,IAAE;cAACA,KAAK,CAAC/B,KAAK,CAACS,EAAE,CAAC,CAACuB,KAAK,GAAG,CAAC,GAAGD,KAAK,CAAC/B,KAAK,CAACS,EAAE,CAAC,CAACuB,KAAK,EAAE9B,KAAK,CAAC;YAAA,CAAC,CAAE;YAAAa,QAAA,EAAC;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtK,CAAC,eACNzB,OAAA;UAAKkB,SAAS,EAAC,WAAW;UAAAD,QAAA,EAAEX,CAAC,CAAC6B,GAAG,CAACC,IAAI,IAAEA,IAAI,CAACF,KAAK,CAACC,GAAG,CAACP,CAAC,iBAAE5B,OAAA;YAAOI,KAAK,EAAEwB,CAAE;YAACS,QAAQ,EAAE,IAAK;YAACnB,SAAS,EAAEpB,EAAE,CAACwC;UAAQ;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACV,CAAC;AAAAtB,EAAA,CA3BKF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AA6BlB,eAAeA,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
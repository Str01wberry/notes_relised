{"ast":null,"code":"var _jsxFileName = \"/home/vornxy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Programming/n/todo/todo/src/App.jsx\",\n  _s = $RefreshSig$();\nimport Content from \"./components/Content\";\nimport { useState } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [folders, setFolders] = useState([{\n    name: 'folder',\n    id: 0\n  }]);\n  const [notesInQuickNotes, setNotesInQuickNotes] = useState([{\n    text: 'Note1'\n  }]);\n  const [notesInFolders, setNotesInFolders] = useImmer([{\n    id: 0,\n    notes: ['00000', '0']\n  }, {\n    id: 1,\n    notes: ['11111', '1']\n  }]);\n  function createQuickNote(text) {\n    setNotesInQuickNotes([...notesInQuickNotes, {\n      text: text\n    }]);\n  }\n  function deleteQuickNote() {}\n  function deleteFolder(id) {\n    let fl = folders.filter(folder => folder.id != id);\n    setFolders(fl);\n    deleteNoteInFolder(id);\n  }\n  function deleteNoteInFolder(id) {\n    let n = notesInFolders.filter(note => note.id != id);\n    setNotesInFolders(n);\n  }\n  function createFolder(text) {\n    const id = folders.length + 1;\n    setFolders([...folders, {\n      name: text,\n      id: id\n    }]);\n    setNotesInFolders([...notesInFolders, {\n      id: id,\n      notes: []\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(Content, {\n    folders: folders,\n    deleteFolder: deleteFolder,\n    setFolders: setFolders,\n    createFolder: createFolder,\n    createQuickNote: createQuickNote,\n    notesInQuickNotes: notesInQuickNotes,\n    setNotesInFolders: setNotesInFolders,\n    notesInFolders: notesInFolders\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"HP9HQFP5+h0vfMZb2h0RIAKC1wk=\", false, function () {\n  return [useImmer];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Content","useState","useImmer","jsxDEV","_jsxDEV","App","_s","folders","setFolders","name","id","notesInQuickNotes","setNotesInQuickNotes","text","notesInFolders","setNotesInFolders","notes","createQuickNote","deleteQuickNote","deleteFolder","fl","filter","folder","deleteNoteInFolder","n","note","createFolder","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vornxy/Рабочий стол/Programming/n/todo/todo/src/App.jsx"],"sourcesContent":["import Content from \"./components/Content\";\nimport { useState } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport './styles/App.css';\n\nconst App = () =>{\n    const [folders, setFolders] = useState([{name: 'folder', id: 0}])\n    const [notesInQuickNotes, setNotesInQuickNotes] = useState([{text:'Note1'}]);\n    const [notesInFolders, setNotesInFolders] = useImmer([{id: 0, notes: ['00000', '0']}, {id: 1, notes: ['11111', '1']}])\n\n    function createQuickNote(text){\n        setNotesInQuickNotes([...notesInQuickNotes, {text: text}])\n    }\n    function deleteQuickNote(){\n\n\n    }\n    function deleteFolder(id){\n        let fl = folders.filter(folder=>folder.id != id);\n        setFolders(fl)\n        deleteNoteInFolder(id)\n    }\n    function deleteNoteInFolder(id){\n        let n = notesInFolders.filter(note=>note.id != id);\n        setNotesInFolders(n)\n    }\n    function createFolder(text){\n        const id = folders.length + 1;\n        setFolders([...folders, {name: text, id: id}]);\n        setNotesInFolders([...notesInFolders, {id: id, notes:[] }])\n        \n    }\n\n    return(\n        <Content folders={folders} deleteFolder={deleteFolder} setFolders={setFolders} createFolder={createFolder} createQuickNote={createQuickNote} notesInQuickNotes={notesInQuickNotes} setNotesInFolders={setNotesInFolders} notesInFolders={notesInFolders}/>\n    )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC;IAACQ,IAAI,EAAE,QAAQ;IAAEC,EAAE,EAAE;EAAC,CAAC,CAAC,CAAC;EACjE,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC;IAACY,IAAI,EAAC;EAAO,CAAC,CAAC,CAAC;EAC5E,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,CAAC;IAACQ,EAAE,EAAE,CAAC;IAAEM,KAAK,EAAE,CAAC,OAAO,EAAE,GAAG;EAAC,CAAC,EAAE;IAACN,EAAE,EAAE,CAAC;IAAEM,KAAK,EAAE,CAAC,OAAO,EAAE,GAAG;EAAC,CAAC,CAAC,CAAC;EAEtH,SAASC,eAAeA,CAACJ,IAAI,EAAC;IAC1BD,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,EAAE;MAACE,IAAI,EAAEA;IAAI,CAAC,CAAC,CAAC;EAC9D;EACA,SAASK,eAAeA,CAAA,EAAE,CAG1B;EACA,SAASC,YAAYA,CAACT,EAAE,EAAC;IACrB,IAAIU,EAAE,GAAGb,OAAO,CAACc,MAAM,CAACC,MAAM,IAAEA,MAAM,CAACZ,EAAE,IAAIA,EAAE,CAAC;IAChDF,UAAU,CAACY,EAAE,CAAC;IACdG,kBAAkB,CAACb,EAAE,CAAC;EAC1B;EACA,SAASa,kBAAkBA,CAACb,EAAE,EAAC;IAC3B,IAAIc,CAAC,GAAGV,cAAc,CAACO,MAAM,CAACI,IAAI,IAAEA,IAAI,CAACf,EAAE,IAAIA,EAAE,CAAC;IAClDK,iBAAiB,CAACS,CAAC,CAAC;EACxB;EACA,SAASE,YAAYA,CAACb,IAAI,EAAC;IACvB,MAAMH,EAAE,GAAGH,OAAO,CAACoB,MAAM,GAAG,CAAC;IAC7BnB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAACE,IAAI,EAAEI,IAAI;MAAEH,EAAE,EAAEA;IAAE,CAAC,CAAC,CAAC;IAC9CK,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE;MAACJ,EAAE,EAAEA,EAAE;MAAEM,KAAK,EAAC;IAAG,CAAC,CAAC,CAAC;EAE/D;EAEA,oBACIZ,OAAA,CAACJ,OAAO;IAACO,OAAO,EAAEA,OAAQ;IAACY,YAAY,EAAEA,YAAa;IAACX,UAAU,EAAEA,UAAW;IAACkB,YAAY,EAAEA,YAAa;IAACT,eAAe,EAAEA,eAAgB;IAACN,iBAAiB,EAAEA,iBAAkB;IAACI,iBAAiB,EAAEA,iBAAkB;IAACD,cAAc,EAAEA;EAAe;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAElQ,CAAC;AAAAzB,EAAA,CA/BKD,GAAG;EAAA,QAGuCH,QAAQ;AAAA;AAAA8B,EAAA,GAHlD3B,GAAG;AAiCT,eAAeA,GAAG;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
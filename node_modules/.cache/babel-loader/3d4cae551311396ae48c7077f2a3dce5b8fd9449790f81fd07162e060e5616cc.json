{"ast":null,"code":"var _jsxFileName = \"/home/vornxy/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Programming/n/todo/todo/src/components/FolderScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderScreen = props => {\n  _s();\n  const [value, setValue] = useState('');\n  const n = props.notesInFolders.filter(el => el.id == props.sd);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.setIsInFolder(false),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setValue(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.setNotesInFolders(draft => {\n              draft[props.sd].notes = [...draft[props.sd].notes, value];\n            }),\n            children: \"Add new note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: n.map(n => n.notes.map(e => /*#__PURE__*/_jsxDEV(\"input\", {\n            value: e,\n            className: \"QNInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 42\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n_s(FolderScreen, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = FolderScreen;\nexport default FolderScreen;\nvar _c;\n$RefreshReg$(_c, \"FolderScreen\");","map":{"version":3,"names":["useState","useImmer","jsxDEV","_jsxDEV","FolderScreen","props","_s","value","setValue","n","notesInFolders","filter","el","id","sd","children","onClick","setIsInFolder","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","setNotesInFolders","draft","notes","map","className","_c","$RefreshReg$"],"sources":["/home/vornxy/Рабочий стол/Programming/n/todo/todo/src/components/FolderScreen.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport { useImmer } from \"use-immer\"\n\nconst FolderScreen = (props) =>{\n  const [value, setValue] = useState('')\n    const n = props.notesInFolders.filter((el) => el.id == props.sd)\n\n    \n    return(<div>\n    <button onClick={()=>props.setIsInFolder(false)}>Back</button>\n    <div >\n        <div >\n          <input onChange={e=>{setValue(e.target.value)}}></input>\n          <div >\n            <button  onClick={()=>props.setNotesInFolders(draft=>{draft[props.sd].notes = [...draft[props.sd].notes, value]})}>Add new note</button>   \n          </div>\n          <div >{n.map(n=>n.notes.map(e=><input value={e} className='QNInput'></input>))}</div>\n        </div>\n    </div>\n    </div>)\n}\n\nexport default FolderScreen"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAIC,KAAK,IAAI;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,CAAC,GAAGJ,KAAK,CAACK,cAAc,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAE,IAAIR,KAAK,CAACS,EAAE,CAAC;EAGhE,oBAAOX,OAAA;IAAAY,QAAA,gBACPZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAIX,KAAK,CAACY,aAAa,CAAC,KAAK,CAAE;MAAAF,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9DlB,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAOmB,QAAQ,EAAEC,CAAC,IAAE;YAACf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAC;UAAA;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxDlB,OAAA;UAAAY,QAAA,eACEZ,OAAA;YAASa,OAAO,EAAEA,CAAA,KAAIX,KAAK,CAACoB,iBAAiB,CAACC,KAAK,IAAE;cAACA,KAAK,CAACrB,KAAK,CAACS,EAAE,CAAC,CAACa,KAAK,GAAG,CAAC,GAAGD,KAAK,CAACrB,KAAK,CAACS,EAAE,CAAC,CAACa,KAAK,EAAEpB,KAAK,CAAC;YAAA,CAAC,CAAE;YAAAQ,QAAA,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrI,CAAC,eACNlB,OAAA;UAAAY,QAAA,EAAON,CAAC,CAACmB,GAAG,CAACnB,CAAC,IAAEA,CAAC,CAACkB,KAAK,CAACC,GAAG,CAACL,CAAC,iBAAEpB,OAAA;YAAOI,KAAK,EAAEgB,CAAE;YAACM,SAAS,EAAC;UAAS;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACV,CAAC;AAAAf,EAAA,CAjBKF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAmBlB,eAAeA,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}